import React, { useState, useEffect, useContext } from 'react';
import { AuthContext } from '../context/AuthContext';
import { getUserOrders } from '../utils/api';
import OrderItem from './OrderItem';

const ProfileScreen = ({ navigateTo }) => {
  const [activeTab, setActiveTab] = useState('–ú–æ–∏ –∑–∞–∫–∞–∑—ã');
  const [orders, setOrders] = useState([]);
  const [loading, setLoading] = useState(true);
  const { user, logout } = useContext(AuthContext);

  useEffect(() => {
    if (user && activeTab === '–ú–æ–∏ –∑–∞–∫–∞–∑—ã') {
      const fetchOrders = async () => {
        try {
          const response = await getUserOrders(user.id);
          if (response.success) {
            setOrders(response.orders);
          }
        } catch (error) {
          console.error('Error fetching orders:', error);
        } finally {
          setLoading(false);
        }
      };

      fetchOrders();
    }
  }, [user, activeTab]);

  const handleLogout = () => {
    logout();
    navigateTo('auth');
  };

  return (
    <div className="screen profile-screen">
      <div className="header">
        <div className="logo">–ü—Ä–æ—Ñ–∏–ª—å</div>
      </div>
      
      <div className="profile-header">
        <div className="profile-avatar">üë§</div>
        <div>
          <div className="profile-name">{user?.name || '–ì–æ—Å—Ç—å'}</div>
          <div className="profile-email">{user?.email || '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω'}</div>
        </div>
      </div>
      
      <div className="tabs">
        <div 
          className={`tab ${activeTab === '–ú–æ–∏ –∑–∞–∫–∞–∑—ã' ? 'active' : ''}`}
          onClick={() => setActiveTab('–ú–æ–∏ –∑–∞–∫–∞–∑—ã')}
        >
          –ú–æ–∏ –∑–∞–∫–∞–∑—ã
        </div>
        <div 
          className={`tab ${activeTab === '–ù–∞—Å—Ç—Ä–æ–π–∫–∏' ? 'active' : ''}`}
          onClick={() => setActiveTab('–ù–∞—Å—Ç—Ä–æ–π–∫–∏')}
        >
          –ù–∞—Å—Ç—Ä–æ–π–∫–∏
        </div>
        <div 
          className={`tab ${activeTab === '–í—ã—Ö–æ–¥' ? 'active' : ''}`}
          onClick={handleLogout}
        >
          –í—ã—Ö–æ–¥
        </div>
      </div>
      
      {activeTab === '–ú–æ–∏ –∑–∞–∫–∞–∑—ã' && (
        <div>
          {loading ? (
            <div style={{ textAlign: 'center', marginTop: '50px' }}>–ó–∞–≥—Ä—É–∑–∫–∞...</div>
          ) : orders.length > 0 ? (
            orders.map(order => (
              <OrderItem key={order.id} order={order} />
            ))
          ) : (
            <div style={{ textAlign: 'center', marginTop: '50px' }}>–ù–µ—Ç –∑–∞–∫–∞–∑–æ–≤</div>
          )}
        </div>
      )}
      
      {activeTab === '–ù–∞—Å—Ç—Ä–æ–π–∫–∏' && (
        <div style={{ padding: '20px' }}>
          <h3>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è</h3>
          <p>–ó–¥–µ—Å—å –±—É–¥—É—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è</p>
        </div>
      )}
    </div>
  );
};

export default ProfileScreen;